/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package grupo4.proyectoso;

/**
 *
 * @author danac
 */
public class PopapProceso extends javax.swing.JFrame {

    /**
     * Creates new form PopapProceso
     */
    public PopapProceso() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        panelPopap = new javax.swing.JPanel();
        btnBloquearProceso = new javax.swing.JButton();
        lblPIDPopap = new javax.swing.JLabel();
        txtPIDPopap = new javax.swing.JTextField();
        lblPrioridadPopap = new javax.swing.JLabel();
        txtPrioridadPopap = new javax.swing.JTextField();
        btnModificarPrioridadPopap = new javax.swing.JButton();

        btnBloquearProceso.setText("Bloquear");
        btnBloquearProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloquearProcesoActionPerformed(evt);
            }
        });

        lblPIDPopap.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblPIDPopap.setText("PID:");

        txtPIDPopap.setText(String.valueOf(this.pid));

        lblPrioridadPopap.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblPrioridadPopap.setText("Prioridad:");

        txtPrioridadPopap.setText(String.valueOf(this.prioridad));

        btnModificarPrioridadPopap.setText("Modificar Prioridad");
        btnModificarPrioridadPopap.setActionCommand("v");
        btnModificarPrioridadPopap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPrioridadPopapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPopapLayout = new javax.swing.GroupLayout(panelPopap);
        panelPopap.setLayout(panelPopapLayout);
        panelPopapLayout.setHorizontalGroup(
            panelPopapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPopapLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panelPopapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPopapLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblPIDPopap))
                    .addComponent(lblPrioridadPopap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPopapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPrioridadPopap)
                    .addComponent(txtPIDPopap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(panelPopapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBloquearProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificarPrioridadPopap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
        );
        panelPopapLayout.setVerticalGroup(
            panelPopapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPopapLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(btnBloquearProceso)
                .addGap(18, 18, 18)
                .addComponent(btnModificarPrioridadPopap)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPopapLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(panelPopapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPIDPopap)
                    .addComponent(txtPIDPopap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPopapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrioridadPopap)
                    .addComponent(txtPrioridadPopap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        btnModificarPrioridadPopap.getAccessibleContext().setAccessibleName("Modificar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPopap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPopap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBloquearProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloquearProcesoActionPerformed
        this.pid = Long.valueOf(this.txtPIDPopap.getText());
        if (this.proceso != null && this.proceso.getPID() == this.pid) {
            this.proceso.setMotivoBloqueo("Usuario");
            this.proceso.bloquear();
        } else {
            for (Procesador procesador : this.planificador.getProcesadores()) {
                if (procesador.getProceso() != null && procesador.getProceso().getPID() == this.pid) {
                    procesador.getProceso().setMotivoBloqueo("Usuario");
                    procesador.getProceso().bloquear();
                    return;
                }
            }
            Proceso proceso = this.planificador.getMultiNivelListos().obtener(this.pid);
            if (proceso != null) {
                proceso.setMotivoBloqueo("Usuario");
                proceso.bloquear();
            }
        }
    }//GEN-LAST:event_btnBloquearProcesoActionPerformed

    private void btnModificarPrioridadPopapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPrioridadPopapActionPerformed
        this.pid = Long.valueOf(this.txtPIDPopap.getText());
        this.prioridad = Short.valueOf(this.txtPrioridadPopap.getText());
        if (this.proceso != null && this.proceso.getPID() == this.pid &&
                this.proceso.getPrioridad() != this.prioridad) {
            this.planificador.setPrioridadProceso(this.proceso, this.prioridad);
        } else {
            if (this.planificador.getProcesosBloqueadosPorPID().containsKey(this.pid)) {
                this.planificador.getProcesosBloqueadosPorPID().get(this.pid).setPrioridad(this.prioridad);
                return;
            }

            for (Procesador procesador : this.planificador.getProcesadores()) {
                if (procesador.getProceso() != null && procesador.getProceso().getPID() == this.pid) {
                    procesador.getProceso().setPrioridad(this.prioridad);
                    return;
                }
            }

            Proceso proceso = this.planificador.getMultiNivelListos().obtener(this.pid);
            if (proceso != null && proceso.getPrioridad() != this.prioridad) {
                this.planificador.setPrioridadProceso(proceso, this.prioridad);
            }
        }
        
    }//GEN-LAST:event_btnModificarPrioridadPopapActionPerformed

    public void setProceso(Proceso proceso) {
        this.proceso = proceso;
        if (this.proceso != null) {
            this.pid = this.proceso.getPID();
            this.prioridad = this.proceso.getPrioridad();
            this.txtPIDPopap.setText(String.valueOf(this.pid));
            this.txtPrioridadPopap.setText(String.valueOf(this.prioridad));
        } 
    }
    
    public void setPlanificador(Planificador planificador) {
        this.planificador = planificador;
    }
    
    public Proceso getProceso() {
        return this.proceso;
    }
    
    public long getPID() {
        return this.pid;
    }
    
    public short getPrioridad() {
        return this.prioridad;
    }

    private Proceso proceso;
    private Planificador planificador;
    private long pid;
    private short prioridad;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBloquearProceso;
    private javax.swing.JButton btnModificarPrioridadPopap;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblPIDPopap;
    private javax.swing.JLabel lblPrioridadPopap;
    private javax.swing.JPanel panelPopap;
    private javax.swing.JTextField txtPIDPopap;
    private javax.swing.JTextField txtPrioridadPopap;
    // End of variables declaration//GEN-END:variables
}
